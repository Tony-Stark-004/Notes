{
	"nodes":[
		{"id":"1eb435bd64658204","type":"text","text":"# What is Helm in Kubernetes?","x":-260,"y":-360,"width":500,"height":60,"color":"3"},
		{"id":"75521f632461d5a3","type":"text","text":"# Helm\nIt is package manager for Kubernetes.\n* To package YAML files and distribute them in public and private repositories\n* It is same like docker-hub for docker.\n\n# Helm charts\n\n* Bundle of YAML files\n* Create your own Helm Charts with Helm\n* Push them to Helm Repository\n* You can make private Helm charts repository and can also make public just like on Docker-hub","x":-540,"y":-280,"width":780,"height":420},
		{"id":"c1407cfbf7f31112","type":"text","text":"# Features\n\n##### Template engine\n1. It can be used to make common blueprint for all microservices and Dynamic value which is not common among micro-services are replaced by placeholders\n\n* Dynamic Value is defined in Template YAML file as \n\t* `name: {{.Values.name}}`\n\t* `containerName: {{.Values.container.name}}`\n\t* `port: {{.Values.container.port}}`\n\n1. Now these dynamic variable values can be replaced using variables in separate `Values.yaml` file \n\n* `Value.yaml` is file name\n```\nname: my-app\ncontainer:\n\tname: my-app-container\n\tport: 5001\n```\nHere we are using `Value.yaml` file variable as object\n\n2. The second way to replace the dynamic value is using `--set flag` in `CLI`\n","x":260,"y":-280,"width":780,"height":720,"color":"4"},
		{"id":"22dbc708b7c7a7e6","type":"text","text":"# Helm charts repository structure\n\n```\nmychart/\n\tChart.yaml\n\tvalues.yaml\n\tcharts/\n\ttemplates/\n\t...\n```\n\n* Top level `mychart` folder is the basically name of the chart\n* `Chart.yaml` is the meta info about chart\n* `values.yaml` values for the templates\n* `charts folder` keep the chart dependencies related files like our chart depends on `other chart`\n* `template folder` is the actual template files\n* We have others files as well like `Readme and License files`\n\n```\n1. helm install <chartname>\n******* This command is used to deployed the helm charts into kubernetes\n\n2. helm install --values=value.yaml <chartname>\n****** This command is used to inject or replace dynamic value into template files\n\n3. helm install --set version=2.0.0\n****** we can override the degault value.yaml file and that value.file is comman for all micro-service if i want to sepecify some attribute to individual micro-service then we can use above command\n\n4. helm upgrade <chartname>\n5. helm rollback <chartname>\n```\n\nNOTE: `Helm server also called tiller` is stored the `Helm chart` and keep the snapshot of it so any time you can rollback and upgrade the `Helm chart` instead of creating `new charts for every new upgrade` this feature of `Helm` is called `Release management`\n\nBut in `version 3` of `Helm` due to security reason `Release management` feature has been removed meaning `no tiller` which makes it complex to use","x":-580,"y":160,"width":820,"height":920,"color":"3"}
	],
	"edges":[]
}