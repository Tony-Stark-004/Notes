{
	"nodes":[
		{"id":"76b27c3fd31b8d62","type":"text","text":"# Complete Application Deployment using Kubernetes Components","x":-480,"y":-340,"width":980,"height":80,"color":"3"},
		{"id":"9c4dfa451832faa9","type":"text","text":"Mongo DB Internal service","x":825,"y":30,"width":250,"height":140},
		{"id":"7639578c790119a1","type":"text","text":"Browser is requesting for mongo-express UI\n\n* It send request to Mongo Express External Service","x":245,"y":-210,"width":340,"height":160},
		{"id":"14bd76d24c988973","type":"text","text":"Mongo Express External Service\n\n* It send to Mongo Express `Pod` and you see the UI","x":670,"y":-220,"width":310,"height":180},
		{"id":"2621c70d4c7117fe","type":"text","text":"Mongo Express `Pod`\n\n* Internal Service is used to access the mongo DB","x":1075,"y":-200,"width":280,"height":140},
		{"id":"8792130f42ed4bc8","type":"text","text":"Mongo DB `Pod`","x":460,"y":30,"width":250,"height":140},
		{"id":"c7a23bdf59862eb2","type":"text","text":"# What we are going to do for practical\n\n* start mongodb pod so we need` Kubernetes Deployment`. Because to start mongodb container we need credential so we don't going to put it into env directory so we need `Kubernetes Secret component` also we use `Kubernetes Internal Service` so mongodb container is accessible inside the cluster and not outside\n***\n\n* Now we will start mongo-express container so we need another `Kubernetes Deployment` and this `Deployment` is accessing the Internal Service of mongodb we interact with other component of Kubernetes inside the cluster we need `Kubernetes service` for mongo-express as well but it `Service` would be `External` because browser also going to access it and we need `Kubernetes ConfigMap component` to have `mongodb url` so it is present globally and any change in URL would not change the `Deployment`. and why we need `mongodb url` because mongo-express need mongodb URL to access the mongodb \n\n##### To perform this practical we need \n* mongodb Deployment , Internal service and Secret \n* mongo-express Deployment, External Service and ConfigMap","x":-760,"y":-240,"width":940,"height":540,"color":"2"},
		{"id":"b98d8dd1b2b6e1bc","type":"text","text":"# Mongo DB Deployment\n\n* We are using mongo image\n* also configuration file is `.yaml` extension and use `apply command` to execute\n* `.yaml` file indentation is very important \n* `mongodb-deployment.yaml` is file name\n\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n\tname: mongodb-deployment\n\tlabels: \n\t\tapp: mongodb\nspec: \n\treplicas: 1\n\tselector: \n\t\tmatchLabel: \n\t\t\tapp: mongodb\n\ttemplate:\n\t\tmetadata:\n\t\t\tlabels:\n\t\t\t\tapp: mongodb\n\t\tspec:\n\t\t\tcontainers: \n\t\t\t- name: mongodb\n\t\t\t  image: mongo\n\t\t\t  ports: \n\t\t\t  - containerPort: 27017\n\t\t\t  env: \n\t\t\t  - name: MONGO_INITDB_ROOT_USERNAME\n\t\t\t    valueFrom:\n\t\t\t\t    secretKeyRef:\n\t\t\t\t\t    name: mongodb-secret\n\t\t\t\t\t    key: mongo-root-username\n\t\t\t  - name: MONGO_INITDB_ROOT_PASSWORD \n\t\t\t    valueFrom:\n\t\t\t\t    secretKeyRef:\n\t\t\t\t\t    name: mongodb-secret\n\t\t\t\t\t    key: mongo-root-password  \n\n---\n\napiVersion: apps/v1\nkind: Service\nmetadata:\n\tname: mongodb-service\nspec: \n\tselector: \n\t\tapp: mongodb\n\tports: \n\t\t- protocol: TCP\n\t\t  port: 27017\n\t\t  targetPort: 27017\n\t\n\t\n  \n```\n\n## Important : \n* Multiple documents in 1 `.yaml` file possible we need `---` triple dash to separate one another and `.yaml` file consider different different file\n* So we keep the `internal service` and `Deployment` in same file\n\n### Also,\n* We have connect the deployment with service as you can see we match the `labels` of deployment which `mongodb` to `selector` of service \n* also we successfully make reference with `Secret component` you can see the `secretKeyRef --> name: mongodb-secret` in the deployment also keep in mind `mongodb-secret` is the `Secret` name you can see in previous step\n\n\n# Commands\n```\n1. kubectl apply -f mongodb-deployment.yaml\n```\n\n```\n2. kubectl get pod\n```\n\n```\n3. kubectl get all\n\nit shows every component inside the cluster like: Pod, deployment, Service, Secret and ConfigMap\n```\n\n```\n4. kubectl describe service mongodb-service\n\nshows every small details of service like IP of Service and Which Pod attach to this Serive and all\n```","x":-760,"y":360,"width":1100,"height":2180,"color":"3"},
		{"id":"f39c9ddea2a46ef0","type":"text","text":"# Mongo DB Secret\n\n* configuration file is `.yaml` extension and use `apply command` to execute\n* `.yaml` file indentation is very important \n* `mongodb-secret.yaml` is file name\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n\tname: mongodb-secret\ntype: Opaque\ndata: \n\tmongo-root-username: dXN1cmr6huxW=\n\tmongo-root-password: cDFzx5wfgvQ=\n  \n```\n\n# What's the meaning of all attribute inside secret file\n\n* `kind: Secret` --> meaning which Kubernetes component it is\n* `metadata --> name: any random name`\n* `type: Opaque` --> Which is default for any arbitrary key-value pairs we have also other than `Opaque`\n* `data` --> actual contents in the key-value pairs\n\n##### Also, keep in mind the data--> key-value should be `base64 encoded` so\n\n1. go to CLI any CLI\n2. `echo -n 'username' | base64`\n\t1. give output like `dXN1cmr6huxW=` for `username text`\n3. do same for `mongo-root-password` value\n\t1. `echo -n 'password' | base64`\n\t\t1. give output like `cDFzx5wfgvQ=` for `password text`\n\n##### Let's create Secret component\n\n```\n1. kubectl apply -f mongodb-secret.yaml\n2. kubectl get secret\n```\n\n##### IMPORTANT :\nit is important to create `Secret` first then give the reference inside the Deployment --> container otherwise creating `Deployment` first is meaning less because you are giving reference of Secret variables and the Secret didn't exist yet","x":-1600,"y":360,"width":820,"height":1240,"color":"4"},
		{"id":"92c3ae88d7d3ac68","x":420,"y":360,"width":1160,"height":2460,"color":"5","type":"text","text":"# Mongo-express deployment\n\n* We are using mongo-express image\n* also configuration file is `.yaml` extension and use `apply command` to execute\n* `.yaml` file indentation is very important \n* `mongo-express-deployment.yaml` is file name\n\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n\tname: mongo-express\n\tlabels: \n\t\tapp: mongo-express\nspec: \n\treplicas: 1\n\tselector: \n\t\tmatchLabel: \n\t\t\tapp: mongo-express\n\ttemplate:\n\t\tmetadata:\n\t\t\tlabels:\n\t\t\t\tapp: mongo-express\n\t\tspec:\n\t\t\tcontainers: \n\t\t\t- name: mongo-express\n\t\t\t  image: mongo-express\n\t\t\t  ports: \n\t\t\t  - containerPort: 8081\n\t\t\t  env: \n\t\t\t  - name: ME_CONFIG_MONGODB_ADMINUSERNAME\n\t\t\t    valueFrom:\n\t\t\t\t    secretKeyRef:\n\t\t\t\t\t    name: mongodb-secret\n\t\t\t\t\t    key: mongo-root-username\n\t\t\t  - name: ME_CONFIG_MONGODB_ADMINPASSWORD \n\t\t\t    valueFrom:\n\t\t\t\t    secretKeyRef:\n\t\t\t\t\t    name: mongodb-secret\n\t\t\t\t\t    key: mongo-root-password \n\t\t\t- name: ME_CONFIG_MONGODB_SERVER\n\t\t\t    valueFrom:\n\t\t\t\t    secretKeyRef:\n\t\t\t\t\t    name: mongodb-configmap\n\t\t\t\t\t    key: database_url \n\n---\n\napiVersion: apps/v1\nkind: Service\nmetadata:\n\tname: mongo-express-service\nspec: \n\tselector: \n\t\tapp: mongo-express\n\ttype: LoadBalancer\n\tports: \n\t\t- protocol: TCP\n\t\t  port: 8081\n\t\t  targetPort: 8081\n\t\t  nodePort: 30000\n\t\n\t\n  \n```\n\n# How to make it an external Service\n\n* `Type` attribute\n* `nodePort` attribute\n\t* it's range is from `30000-32767`\n\t* `nodePort` is port for external IP address. Port we need to put in browser\n\nThis two attribute is extra in `External Service` in `Internal Service` these two attribute is not present to make it `External` we use these two attribute\n\n# Command\n\n```\n1. kubectl apply -f mongo-express-deployment.yaml\n\nbecause it mongo-express-deployment.yaml file contain both Service and Deployment so it create both Service and Deployment at same time\n```\n\n```\n2. kubectl get service\n\n* because for in mongo-express-deployment.yaml we created external service so it shows external-ip in EXTERNAL_IP column.\n* In Internal Service in EXTERNAL_IP column is shows none\n* Internal service or Cluster IP is default so say Cluster IP is internal IP for Service\n\n\nNOTE: in MiniKube the EXTERNAL_IP column shows <pending> so to get the external IP we need to run\n1. minikube service <external-service-name>\n\n------ in our case -----\n\n1. minikube service mongo-express-service\n\t* you will get the external IP address and URL to access mongo-express UI in browser\n```"},
		{"id":"07c8a4671514b974","x":1480,"y":100,"width":540,"height":220,"color":"3","type":"text","text":"Note: because mongo-express is mongodb UI so it needs  \n* Which database to connect meaning database URL\n\t* Mongodb address / internal service\n* and credential of database to access it\n\t* AdminUsername\n\t* AdminPassword"},
		{"id":"457a1ca7cc681682","x":1620,"y":360,"width":1080,"height":780,"color":"4","type":"text","text":"# Kubernetes ConfigMap component\n\n* external configuration file\n* centralized and other components can use it\n* `mongodb-configmap.yaml` is file name\n\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n\tname: mongodb-configmap\ntype: Opaque\ndata: \n\tdatabase_url: mongodb-service\n  \n```\n\nIn `database_url: mongodb-service` the `mongodb-service` is the mongodb-url which is needed by mongo-express and  `mongodb-service` is the name of Kubernetes service that we created and it is `mongodb-url` because service is `permanent IP address` don't forget and any URL contains `IP and port` like `http://IP-address:port`\n\nAlso in `database_url` we gave `mongodb Service name` which is `internal Service` because mongo-express access it internally it is mongo-express which is access by the client because it is `UI` and for that we need `External Service`\n\n```\n1. kubectl apply -f mongodb-configmap.yaml\n```\n\nYou should create it before creating the `mongo-express deployment` because `ConfigMap` is used as reference in `mongo-express deployment`"}
	],
	"edges":[
		{"id":"10fcd1fcc57d3a0f","fromNode":"7639578c790119a1","fromSide":"right","toNode":"14bd76d24c988973","toSide":"left","color":"4","label":"1"},
		{"id":"5aa89fbbe31ff57a","fromNode":"14bd76d24c988973","fromSide":"right","toNode":"2621c70d4c7117fe","toSide":"left","color":"4","label":"2"},
		{"id":"5edeb716f8c63030","fromNode":"2621c70d4c7117fe","fromSide":"bottom","toNode":"9c4dfa451832faa9","toSide":"right","color":"4","label":"3"},
		{"id":"b8061b1c2de93f43","fromNode":"9c4dfa451832faa9","fromSide":"left","toNode":"8792130f42ed4bc8","toSide":"right","color":"4","label":"4"},
		{"id":"75862d36042a101f","fromNode":"07c8a4671514b974","fromSide":"left","toNode":"92c3ae88d7d3ac68","toSide":"top"}
	]
}