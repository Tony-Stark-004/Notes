{
	"nodes":[
		{"id":"ed9210f9d1ea94c5","x":-980,"y":-220,"width":1220,"height":1820,"color":"5","type":"text","text":"# Encrypting Disk\n\n1. Suppose we have `2 disk` of `5GB`  name as\n\t1. `/dev/sda`\n\t2. `/dev/sdb`\n2. we use `/dev/sdb` \n\nNow, \n\n1. `cryptsetup luksFormat /dev/sdb` press enter\n\t1. This will ask for yes then type capital `YES`\n\t2. then this will ask for `passphrase` for `/dev/sdb`\n\t\t1. `passphrase` is `special keyword` used to `encrypt` data if we lost `passphrase` then we won't be able to get our data\n2. `cryptsetup luksOpen /dev/sdb my_disk` press enter\n\t1. Here we are opening our disk `/dev/sdb` and keeping the name as `my_disk`\n\t2. It will ask for `passphrase`. The same `passphrase` that we used in `setp -1`\n3. `lsblk`\n\t1. you will see the `my_disk` on `/dev/sdb`  and its type is `crypt`\n\t2. `lsblk -f` for more details\n4. `cryptsetup status my_disk`\n\t1. this shows status of disk whether it is encrypted disk or not as `active` and `de-active`\n\t2. `active` meaning `yes it is encrypted disk`\n\t3.  `de-active` meaning `no it is not encrypted disk`\n\t4. Also it shows type of encryption. If it is `LUKS2` meaning the kernel has it's passphrase so `NO one ever get the passphrase if he forgot or lost`\n5. you can see the details of `my_disk` encryption in `/dev/mapper directory`\n\t1. `ls -lthr /dev/mapper/my_disk`\n6. `mkfs -t ext4 /dev/mapper/my_disk`\n\t1. formatting the disk `my_disk`\n7. `mkdir /myfiles`\n8. `mount /dev/mapper/my_disk /myfiles`\n9. `df -hT` it will shows whether `/dev/mapper/my_disk` is mounted on `/myfiles` or not\n10. If you want permanent mounting then do entry in `/etc/fstab`\n\t1. `umount /myfiles`\n\t\t1. Here we do not do the entry in `/etc/fstab` directly as we usually do because of security issue. We make a temporary directory and change the permission after that we use that file as a key to mount `/dev/mapper/my_disk` on `/etc/fstab`\n\t2. `dd if=/dev/urandom of=/tmp/crypt_file bs=4096 count=1` it will create `4MB` file in `/tmp directory` with name `crypt_file`\n\t\t1. `ls -l /tmp/crypt_file`\n\t3. `chmod 600 /tmp/crypt_file` giving permission to `owner only`\n\t4. `mv /tmp/crypt_file /etc/` moving file in `/etc directory`\n\t5. `cryptsetup lucksAddKey /dev/sdb /etc/crypt_file` press enter it will ask for `passphrase`\n\t\t1. here we are defining for which disk (`/dev/sdb`) we are going to use this key (`/etc/crypt_file`)\n\t\t2. now our key is pointing the our disk filesystem\n\t6. Now we do the entry in `/etc/crypttab` \n\t\t1. `vim /etc/crypttab` is empty file used for encrypted disk permanent mounting\n\t\t2. `my_disk /dev/sdb /etc/crypt_file` then save it\n\t7. Now do the final entry in `/etc/fstab`\n\t\t1. `vim /etc/fstab`\n\t\t2. `/dev/mapper/my_disk   /myfiles   ext4   0   0`\n\t9. `mount -a`\n\t10. `df -hT` you will see the `mounted disk filesystem` details\n11. lets give all permission on `/myfiles` \n\t1. `chmod 777 /myfiles`\n12. `cd /myfiles`\n13. `cal > cal.txt; mkdir aa bb cc dd; touch {1..100}.txt`\n14. `ls` you will see the all data that we created in `step 13`\n15. now because we give the `full-access` on `/myfiles` and we had  left  the encrypted filesystem `open` anyone can write or see on `/myfiles`\n\t1. `su -aditya`\n\t2. `cd /myfiles`\n\t3. `cat cal.txt` can accessible by `user aditya`\n\t4. to avoid this we need to `close` the filesystem\n16. to `close` the filesystem make sure to `unmount` the filesystem\n17. `df -hT` verify whether it is unmounted or not\n18. `cryprsetup luksClose my_disk`\n19. `lsblk` it won't show anything on `/dev/sdb` like it shows Type `crypt` when filesystem was `open`\n20. `ls -lthr /dev/mapper/my_disk` it will say `cannot access or no such directory` because we `closed` the encrypted filesystem"},
		{"id":"a164f4199454c9ea","x":260,"y":-220,"width":1040,"height":1100,"color":"1","type":"text","text":"# How to access data in encrypted filesystem\nNote --> To access data we need to `Open` the encrypted filesystem then `mount` it then we are able to access it\n\n1. `cryptsetup luksOpen /dev/sdb my_disk` press enter\n\t1. it will ask for `passphrase` that we used to encrypt the disk filesystem\n2. `cryptsetup status my_disk`\n\t1. it should give the `active status`\n3. `mount /dev/mapper/my_disk /myfiles`\n4. `mount -a`\n5. `df -hT`\n6. `cd /myfiles`\n7. `ls` you will see the data\n8. also you can see the data with another user account if we give the permission on `/myfiles`\n9. `su - aditya`\n10. `cd /myfiles`\n11. `ll` \n\n\n# How to change encrypted `Passphrase`\n\n1. `cryptsetup luksChangeKey /dev/sdb` press enter\n\t1. It will ask `old passphrase` then `new passphrase`\n\n# When we don't want to use disk or say want access the data of disk then\n\n1. make sure to unmount the disk\n\t1. `umount /myfiles`\n2. `vim /etc/fstab`\n\t1. comment the entry if it is\n3. `cryptsetup luksClose my_disk`\n4. `cryptsetup luksRemoveKey /dev/sdb` press enter\n\t1. it will ask for `passphrase`\n5. `cryptsetup remove /dev/sdb`\n\t1. This command remove encryption entirely\n6. `lsblk` it won't show anything on `/dev/sdb`\n7. So this is the way to remove encryption"},
		{"id":"7fe1c94174108d4b","x":-30,"y":-340,"width":540,"height":80,"color":"3","type":"text","text":"# Setup Disk Encryption Using LUKS"},
		{"id":"c9ee49aee7b2f50e","x":680,"y":-290,"width":250,"height":60,"color":"3","type":"text","text":"Step 2"},
		{"id":"a328cfb7af10211c","x":-480,"y":-640,"width":580,"height":280,"color":"1","type":"text","text":"`LUCS` --> Linux Unified Key Setup used to encrypt data file-system\n\n1. `dnf list installed | grep cryptsetup` \n\t1. it will show if `cryptsetup package` is installed\n\t2. Also, `cryptsetup package` is used for `LUCS`\n2. `dnf install cryptsetup -y`\n\t1. to install the `cryptsetup package`  If it is not installed\n\n\n# \n  \n"},
		{"id":"81c6a916889bc02c","x":-620,"y":-300,"width":250,"height":60,"color":"3","type":"text","text":"Step 1"}
	],
	"edges":[]
}