{
	"nodes":[
		{"id":"bd57422f63059f58","type":"text","text":"# SSH\nIt is used for remote login into the machine and it port is 22\nFor fedora system `openssh` package is required to use `SSH`\n\n```\n1. rpm -qa | grep openssh\nðŸ‘‰ðŸ‘‰ Checking whether openssh package is installed or not\n\n2. dnf install -y openssh\nðŸ‘‰ðŸ‘‰ It will install the openssh package\n\n3. dnf list installed openssh\nðŸ‘‰ðŸ‘‰ This will also check whether package is installed or not\n\n4. systemctl status sshd\nðŸ‘‰ðŸ‘‰ Will check whether shell daemon status\n\n5. system start sshd\nðŸ‘‰ðŸ‘‰ Starting the ssh daemon\n\nNOTE --> Firewall should have port 22 allowed otherwise it won't accept any traffic via port 22\n\n1. firewall-cmd --list-all\nðŸ‘‰ðŸ‘‰ It will show you the firewall configuration  \n```\n\n![[Pasted image 20250209000947.png]]\n\n```\n------- if ssh port is not allowed in firewall then run -------\n\n1. firewall-cmd --permanent --add-service=ssh\n\n2. ls -ld /etc/ssh\nðŸ‘‰ðŸ‘‰ This path contains the ssh related files and directory\n\n```","x":200,"y":-280,"width":720,"height":1340,"color":"3"},
		{"id":"d456eb2d5bcfe636","type":"text","text":"# Important\n`ssh` uses private and public key and used `RSA or DSA` algorithm for for generating keys\n\n# How to SSH\n\n```\n1. ssh <user-name>@<ip-address>\nðŸ‘‰ðŸ‘‰ <user-name> is the machine user-name whom you want to access\nðŸ‘‰ðŸ‘‰ <ip-address> is the machine ip-address whom you want to access\n\n2. ssh root@192.168.227.133\nðŸ‘‰ðŸ‘‰ you need user password for machine which you want to access\n```\n\nHere we are using the IP-address we can also use the hostname of the machine for that we need have entry in `/etc/hosts` else we need to use `dns`\n\n```\n1. vim /etc/hosts\n```\n\n![[Pasted image 20250209011830.png]]\n\n```\n--------- Now we can use hostname instead of IP ---------\n\n1. ping server1\n2. ssh root@server1\n\nðŸ‘‰ðŸ‘‰ Here we are doing ssh using hostname of machine 2 because we do the entry of machine 2 IP address in machine 1 `/etc/hosts` file\n```\n\n```\n--------- we can also run commands while ssh ----------\nhere machine 1 is doing ssh to machine 2 so pwd and hostname command is execute on machine 2 \n```\n\n![[Pasted image 20250209012213.png]]","x":940,"y":-280,"width":720,"height":1100,"color":"3"},
		{"id":"d8ed357feded58d1","x":320,"y":-380,"width":880,"height":60,"color":"3","type":"text","text":"# Network Sniffing & Secure Shell Configuration (SSH) in Linux"},
		{"id":"5c4e2db27ff41f76","x":120,"y":-800,"width":720,"height":380,"type":"text","text":"# Network Sniffing\nMeaning peeping the data over the internet using sniffing tool\n\n```\n1. yum install wireshark -y\nðŸ‘‰ðŸ‘‰ This is the package which used to peeping the data\n\n2. wireshark\nðŸ‘‰ðŸ‘‰ This command show you an UI which can show you the all connection that established in you machine and also data\n```\n\nNOTE: To prevent it we use encrypted data so it is recommended to use `SSH` "},
		{"id":"b1f7e91a35ef3f9f","x":1700,"y":-280,"width":940,"height":1700,"color":"4","type":"text","text":"# Password-less authentication `ssh`\n\n```\n1. when you install openssh package it make .ssh hidden file in user home directory\n2. suppose you are root user then root directory is the your home directory go inside it and run\n\n3. ls -la\nðŸ‘‰ðŸ‘‰ You will see the .ssh file\n\n4. cd .ssh/\n5. ls\nðŸ‘‰ðŸ‘‰ You will see known_hosts file only\n\n6. cat known_hosts\nðŸ‘‰ðŸ‘‰ This file contain all the information like keys, IP or hostname of previously login device via ssh\n```\n\n```\n1. cd .ssh/\n2. ssh-keygen\nðŸ‘‰ðŸ‘‰ Generating public and private key also by default it uses the RSA algorithm\nðŸ‘‰ðŸ‘‰ Generated Public and Private key are saved on .ssh file\n\n1. cd .ssh/\n2. ls -lh\n```\n\n![[Pasted image 20250209014401.png]]\n\n```\n1. ssh-keygen -t dsa\nðŸ‘‰ðŸ‘‰ It will generate private and public key using dsa algorithm \n```\n\n#### NOTE -->\nMake sure if you are going to ssh machine 2 from machine 1 then both machine should contain the `.ssh` directory and respective user home directory and permission of `.ssh` directory is `700`\n\n```\n1. cd /root\n2. mkdir -m 700 .ssh\n\nðŸ‘‰ðŸ‘‰ here going to root directory and making .ssh file with permission 700 and -m meaning modified\n```\n\n#### Now,\nwe need to copy public key on machine 2 from machine 1 because machine 1 is going to do `ssh` to machine 1 and public key should copy on `.ssh directory`\n\n```\n------ Command Machine 1 -------\n1. scp /root/.ssh/id_rsa.pub root@192.168.227.133:~/.ssh/authorized_keys\n\nðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ let's break down \n\t1. /root/.ssh/id_rsa.pub ---> is the full path where our public key is\n\t2. root@192.168.227.133 ---> is the Machine 2 user name and IP\n\t3. ~/.ssh/authorized_keys ---> is the Machine 2 path where Machine 1 public key is copying.\n\t   Here ~ is home directory\n```\n\nNow let's `ssh` Machine 2\n\n```\n1. ssh root@server1\nðŸ‘‰ðŸ‘‰ It won't ask for password\n```"},
		{"id":"2d775110f5106037","type":"text","text":"# How to secure copying the file\n\n```\n------------- copying file from machine 1 to machine 2 ---------------\n\n1. scp -r /tmp/cal.txt root@192.168.227.133://tmp\n\nðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ Let's break it\n\t1. scp -r ----> meaning secure copying and -r meaning recursive\n\t2. /tmp/cal.txt ----> file you want to copy from machinie 1 to 2\n\t3. root@192.168.227.133 ----> machine 2 username and IP\n\t4. ://tmp ----> path on machine where the content is copying\n```","x":1400,"y":-720,"width":720,"height":400,"color":"3"},
		{"id":"1e3d0e240bc8a177","x":2680,"y":-280,"width":680,"height":440,"color":"3","type":"text","text":"# Easy way to do Password-less authentication\n\n```\n----------- we don't need to make .ssh/authorized_keys manually on every machine which we want to ssh --------\n\n1. ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.227.133\n\nðŸ‘‰ðŸ‘‰ðŸ‘‰ðŸ‘‰ Here ~/.ssh/id_rsa.pub is the Machine 1 public key which we want to copy on Machine 2 and -i meaning import\n\nðŸ‘‰ðŸ‘‰ This will automatically make the .ssh/authorized_keys inside the home directroy of Machine 2\n\n2. ssh root@192.168.227.133\n```"}
	],
	"edges":[]
}