{
	"nodes":[
		{"id":"0523db61a2edf3ef","type":"text","text":"# at command\nIt is used to schedule non-repetitive future jobs. And also used for one time future jobs that execute one time at particular time\n* You need `at package` to use `at` command\n* `rpm -q at` this will show whether `at` package is present in your system or not\n\nNow,\n\n1. `dnf install -y at`\n\t1. it will install `at` package in you machine if repository is configured in your system\n2. after installing `at package` please make sure its service is active\n\t1. `systemctl status atd.service`\n\t\t1. `atd service` meaning `at daemon service`\n\n# How to schedule job using `at command`\n1. suppose we want to schedule job at `8:00 PM` then\n2. `at 20:00` press enter\n\t1. `20:00` meaning `8:00 PM`\n3. on pressing enter it will give you the interface to write your jobs same like `vim editor or cat command` gives\n4. write your job such as \n\t1. `cal > /tmp/cal.txt`\n\t2. also if you don't give the path as i gave `/tmp/cal.txt` it will execute your job in background meaning if only wrote `cal` then it will execute it in background but because we gave the path `/tmp/cal.txt` it won't execute in background.\n 5. press `ctrl+d` to come out of it \n6. now your job is scheduled also you can check using \n\t1. `atq` command \n\t2. `at -l` this will also do the same as `atq`\n7. if you want to see the details of time then \n\t1. run `timedatectl` command it will show you local machine time\n8. `tail /var/log/cron` this directory will show the executed job. \n9. also when job is executed then it is removed from queue of jobs you can check it using `atq` command\n\n \n","x":-660,"y":-220,"width":1085,"height":920,"color":"5"},
		{"id":"70ecbfdc20d9fc22","type":"text","text":"# How to remove scheduled jobs\n\n1. `at now +2 min` press enter it will give you interface as `at>` to write your job\n\t1. here `at now +2 min` meaning please after `2 minutes` execute my jobs which i am going to schedule now\n2. `at> df -hT > /tmp/filesystem.txt` press enter and then `ctrl+d` to come out of it\n3. `atq` command give you scheduled job queue\n\t1. suppose our job queue number is `3`\n4. `atrm 3`\n\t1. it will remove the job number 3 from queue\n\t2. here `3` is scheduled job queue number\n5. If you want job execution output on screen meaning on terminal then check first which terminal are you using\n\t1. `tty` command will give you the current working terminal \n\t2. suppose output of `tty` command is `/dev/pts/0` it could be different in your case\n6. `at now +1 min` press enter then it gives you interface to write jobs\n\t1. `at> cal > /dev/pts/0`\n\t2. now when my `cal` command execute after 1 minute it will give the execution details on terminal\n\n\n# Scheduling shell script\n1. `vim script.sh` \n\t1. `#!/bin/sh`\n\t2. `echo \"Nehra classes are awesome\"`\n\t3. `:qw!` to save and exit from `vim editor`\n\t4. `./script.sh` it will not execute because of execution permission is not given so\n\t5. `chmod +x script.sh`\n\t6. here we are creating `script.sh` in `/tmp` directory\n2. `at now +2 min`\n\t1. `at> sh /tmp/script.sh > /dev/pts/0`\n\t2. `sh /tmp/script.sh` meaning we are executing our shell file `script.sh` . also make sure to give `correct path of file`\n\t3. `> /dev/pts/0` meaning we want output on details when this job will execute\n\n\n***NOTE*** : we can also schedule jobs like\n1. `at 8:00 today` meaning today `8:00 AM`\n2. `at 21:00 tomorrow` meaning tomorrow `9:00 PM`\n3. `at 6PM today`\n4. `at noon +100 days` after hundred days\n5. `at 7PM +2months` after `2 months`","x":460,"y":-220,"width":1085,"height":1100,"color":"5"},
		{"id":"fe7f6c6982d62e8e","type":"text","text":"# Schedule Future Jobs/Tasks Using AT Command in Linux (RHEL 8)","x":-117,"y":-320,"width":960,"height":74,"color":"3"},
		{"id":"1caca9305b96596e","type":"text","text":"# crontab command\nIt is used to schedule repetitive future jobs\n","x":-280,"y":-460,"width":562,"height":121,"color":"4"},
		{"id":"d395c42dc0ec45f7","x":316,"y":-500,"width":944,"height":161,"color":"1","type":"text","text":"# How to restrict normal user to schedule a job\n\n1. `vim /etc/at.deny`\n\t1. you need to do entry of that user inside the `/etc/at.deny` file if you want to restrict that user to schedule the job "}
	],
	"edges":[]
}