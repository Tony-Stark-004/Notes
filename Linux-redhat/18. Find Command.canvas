{
	"nodes":[
		{"id":"f24681acc5d7240b","x":-40,"y":-1400,"width":620,"height":120,"color":"3","type":"text","text":"Find command \nHow to write \n1. `find /path -option filename`"},
		{"id":"64e26fa4cde79eee","type":"text","text":"`find command` \n#find use to find or search\n\n1. `find . -type f -perm 0777 -print` here \n\t1. `-perm` means we are searching file on the basis of file `permission` and\n\t2. `0777` means whose permission is `0777` and \n\t3. `-print` means print all those files\n\n2. `find . -type f ! -perm 0777 -print` here \n\t1. `! sign`  means all files other than permission `0777`  \n3. `find . -perm 0777` means all files whose permission is `0777`\n4. `find . -perm 4666` means all files whose permission is `4666`\n5. `find . -perm /u=s` this also means all files whose permission is `4666`\n6. `find . -perm /u=r` this also means all read only files \n8. `find . -perm /a=x` this also means all  files who has executable permission \n9. `find . -perm /g=s` this also means something i don't know yet but we will get to know when we cover permission module\n\n\n****VERY IMPORTANT*** : If we want to search file also change permission of file at same time we can do that using `find command`\n1. `find . -type f -perm 0777 -print -exec chmod 644 {} \\;`\n\t1. `find .-type f -perm 0777` till this we know it search for `0777` permission file and print it on display\n\t2.  `-exec chmod 644 {} \\;` means execute `chmod 644` and `{} \\` means content of file should be same and in same `path` where it is now just change his permission to `644`\n2.  `find . -type f -name \"*.txt\" -exec rm -f {} \\;` find all `.txt file` and delete as well\n3. `find /tmp -type f -empty` this list all empty files present in `/tmp` directory\n4. `find . -user root -name ana*` this list file whose `userID is root` \n4. `find . -group root -name ana*` this list file whose `groupID is root` \n5. `find / -mtime 2` this list all files that modified in 2 days\n6. `find / -atime 2` this list all files that access in 2 days\n7. `find / -mtime 2 +5 -mtime -7` this list all files that modified between 5 to 7 days\n7. `find / -mmin -60` this list all files that modified in 60 minutes\n7. `find / -amin -60` this list all files that access in 60 minutes\n7. `find / -size 50M` this list all files that is `50MB`\n7. `find / -size +50M -size -100M` this list all files that is more than `50MB` and less than `100MB`\n\n****IMPORTANT***\n\t1. `find /tmp -type f -newer text.txt` list all files that is newer than `text.txt` meaning file that made after `text.txt`\n\t1. `find /tmp -type f -older text.txt` list all files that is older than `text.txt` meaning file that made before `text.txt`\n","x":200,"y":-1200,"width":1380,"height":960,"color":"1"},
		{"id":"1f4c5e6d1e6ef2e7","x":-1160,"y":-1200,"width":1298,"height":793,"type":"text","text":"`find command` \n#find use to find or search\n\n1. `find /root/ -name ana*` output is `/root/anaconda-ks.cfg`  let's break it \n\nhere \n1. `find` command name\n2. `/root/` file path name where searching file is present\n3. `-name` this is option which means we are searching by name of file and not by extension of file\n4. `ana*` this is file name where we know only three character of it\n\nalso\n1. `find . -type f -name ana*` output is `./anaconda-ks.cfg` let's break it also this command is case sensitive\n2. `find . -type f -iname Ana*` output is `./anaconda-ks.cfg or ./Anaconda-ks.cfg` this command is case in-sensitive\n2. `find . -type d -iname /root/dir*` output is `./Directory or ./directory` this command is case in-sensitive and `d` option use for directory\n\nhere\n1. `find` command name\n2. `.` present directory where we are searching for file\n3. `-type` uses for whether we are searching for `file or directory`\n4. `f` means we are searching for `files`\n5. `-iname` here `-i` means case insensitive\n6. `-name` this is option which means we are searching by name of file and not by extension of file\n7. `ana*` this is file name where we know only three character of it\n\n\n****NOTE*** : we use double quote \" \" when search for multiple file of same name or same extension\n1. `find . -type f -iname \"*.txt\"` output is `textone.txt, textTwo.txt etc` "},
		{"id":"87ee2b859f01fbc3","type":"text","text":"`locate command` \n#locate use to find or search\n\n1. `locate text.txt` it search for `text.txt` file but quicker than `find command` \n2. output is `/root/text.txt`\n","x":-1160,"y":-360,"width":1298,"height":200}
	],
	"edges":[]
}