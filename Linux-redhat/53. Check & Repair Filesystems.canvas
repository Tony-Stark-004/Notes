{
	"nodes":[
		{"id":"90114434b75060ff","type":"text","text":"# fsck command\n#fsck -->`file system checker` Used to check `ext filesystem`\n\n\n# e2fsck command\n#e2fsck --> This also used to check `ext filesystem`\n\n\n# xfs_repair command\n#xfs_repair --> This command used to check `xfs filesystem`\n\nLet's install the `package`\n1. `rpm -qa | grep util-linux*`\n\t1. it checks whether `util-linux` is installed or not\n\t2. `yum install -y util-linux`\n\t3. `util-linux` package is responsible for `fsck command`\n\t4. `rpm -qf 'which fsck'` This command used to find which command belongs to which package so output will be `util-linux` package  \n2. `rpm -qf 'which e2fsck'`\n\t1. output would be `e2fsprogs` which is package\n\t2. so, `e2fsck` belong to `e2fsprogs` package\n\n\n","x":-598,"y":-1040,"width":838,"height":680,"color":"5"},
		{"id":"5bc8b8039563217f","type":"text","text":"Step 1","x":-609,"y":-1110,"width":250,"height":60,"color":"3"},
		{"id":"de6eac41d600f07f","type":"text","text":"# `fsck command`\n\n1. run `man fsck` \n\t1. will show you manual also \n2. Suppose we have `6 partition disk` name as :\n\t1. `/dev/sda1`\n\t2. `/dev/sdb1`\n\t3. `/dev/sdc1`\n\t4. `/dev/sdd1`\n\t5. `/dev/sde1`\n\t6. `/dev/sdf1`\n3. let's `format` the `partition`\n\t1. `mkfs.ext2 /dev/sda1` formatted as `ext2` \n\t2. `mkfs.ext3 /dev/sdb1` formatted as `ext3`\n\t3. `mkfs.ext4 /dev/sdc1` formatted as `ext4`\n\t4. `mkfs.xfs /dev/sdd1` formatted as `xfs`\n4. let's make `LVM` for disk `/dev/sde1` and `/dev/sdf1`\n\t1. for `/dev/sde1`\n\t\t1. `pvcreate /dev/sde1`\n\t\t2. `vgcreate vg_ext4 /dev/sde1`\n\t\t3. `lvcreate -L 4G -n lvm_ext4 vg_ext4`\n\t\t4. `mkfs.ext4 /dev/vg_ext4/lvm_ext4`\n\t2. for `/dev/sdf1`\n\t\t1.  `pvcreate /dev/sdf1`\n\t\t2. `vgcreate vg_xfs /dev/sdf1`\n\t\t3. `lvcreate -L 4G -n lvm_xfs vg_xfs`\n\t\t4. `mkfs.xfs /dev/vg_xfs/lvm_xfs`\n5. let's mount all of the disk\n\t1. `mkdir /mnt/ext2_dir`\n\t2. `mkdir /mnt/ext3_dir`\n\t3. `mkdir /mnt/ext4_dir`\n\t4. `mkdir /mnt/xfs_dir`\n\t5. `mkdir /mnt/ext4lvm_dir`\n\t6. `mkdir /mnt/xfslvm_dir`\n6. let's do entry in `/etc/fstab` \n\t1. `vim /etc/fstab` entry in `fstab` help to decide `order of filesystem check`\n\t\t1. `/dev/sda1   /mnt/ext2_dir   ext2   defaults   0,0`\n\t\t\t1. `0` for `dumping`\n\t\t\t2. `1` for `filesystem check order` \n\t\t2.  `/dev/sdb1   /mnt/ext3_dir   ext3   defaults   0,1`\n\t\t3. `/dev/sdc1   /mnt/ext4_dir   ext4   defaults   0,1`\n\t\t4. `/dev/sdd1   /mnt/xfs_dir   xfs   defaults   0,2`\n\t\t5. `/dev/vg_ext4/lvm_ext4   /mnt/ext4lvm_dir   ext4   defaults   0,2`\n\t\t6. `/dev/vg_xfs/lvm_xfs   /mnt/xfslvm_dir   xfs   defaults   0,2`\n7. `mount -a` for remounting the `/etc/fstab`\n8. `df -hT` for seeing mounting details\n\n\n***NOTE*** : `File system check order range is from 0 to 2` using number above cause your system in emergency mode while rebooting\n1. `0` meaning disable\n2. `1` used for `root file system`\n3. `2` used for `normal file system`\n\n# see step 3 ---->","x":-598,"y":-260,"width":838,"height":1520,"color":"1"},
		{"id":"ef3f80a6f79aafc5","type":"text","text":"# let's check file-system\n\n***Checking `/dev/sda1`***\n1. `fsck /dev/sda1` \n\t1. The file-system should not mounted. make sure that\n\t2. if file-system is mounted then use\n\t\t1. `umount /dev/sda1`\n2. `fsck command` use many option\n\t1. `-p` --> Automatic repair\n\t2. `-n` --> Make no change to file-system\n\t3. `-y` --> assume `yes` to all question\n\t4. `-c` --> check for `bad block`\n\t5. `-f` --> forcefully check\n\t6. `-v` --> verbose\n\t7. `-b` --> superblock  use alternative superblock\n\t8. `-B` --> block_size force block_size when looking for superblock\n\t9. `-j` --> external journal set\n\t10. `-l` --> bad_block add to bad_block list\n\t11. `-L` --> bad_block_file Set bad_block list \n\nNow, \n1. `fsck /dev/sda1` if it is showing you clean and you still want to check then use `-f`\n\t1. `fsck -f /dev/sda1`\n\t2. `e2fsck -f /dev/sda1` both command do same job\n2. `fsck -f /dev/sda1` this will fix errors in our file-system `Automatically`\n\t1. `fsck -af /dev/sda1` this will fix errors in our file-system `Automatically and forcely`\n3. `fsck -n /dev/sda1` it will not repair file-system when we use `-n`\n4. `fsck -t ext2 /dev/sda1`\n\t1. You can use it explicitly defining the `type of filesystem` but you can ignore also i mean not important to define type\n\t2. `fsck /dev/sda1` this also check or work\n\n\n## Note --> Same command work with every `ext` file system\n\nAlso,\n## `If you want to check-repiar all file-system at once` Then,\n1. `fsck -A`\n\t1. option `-A` use when we want to check `/etc/fstab` file system in their respective order which is mention in `/etc/fstab`\n\t2. It will not repair `xfs` file system\n2. `fsck -AR` this command `exclude root file system`","x":260,"y":-260,"width":1020,"height":1260,"color":"5"},
		{"id":"e42036444ef20490","type":"text","text":"# Check & Repair Filesystems","x":20,"y":-340,"width":440,"height":50,"color":"3"},
		{"id":"628cdb7d79d37f49","type":"text","text":"#  checking `xfs` file system\n\n\nNote --> `fsck command` can't check `xfs` filesystem\n\n1. `xfs_repair /dev/sdd1`\n\t1. This command check `xfs` file system and also `repair` it","x":260,"y":1020,"width":1020,"height":220,"color":"5"},
		{"id":"554b89eb40a5dd6c","type":"text","text":"Step 2","x":-598,"y":-340,"width":250,"height":60,"color":"3"},
		{"id":"eeb419f0a9da3ce3","type":"text","text":"Step 3","x":1030,"y":-335,"width":250,"height":50,"color":"3"},
		{"id":"ed8939e11e9e1183","type":"text","text":"# How to check `root file-system`\n\n1. `press f2` while booting the system to go to `BIOS`\n2. `open the bios`\n3. `make CD-ROM-Drive as 1st priority`\n4. then `boot the system`\n5. `choose troubleshoot option`\n6. `choose rescue a Red-hat Enterprise Linux System`\n7. `choose`\n8. `choose skip to shell option`\n9. `vgchange -ay` please `activate the lvm`\n10. `lvscan` to check whether it is `activated` or `not`\n11. run \n\t1. `xfs_repair /dev/rhel/root` if `root file system is xfs formatted`\n\t2. `fsck /dev/rhel/root` if `root file system is ext formatted`\n\t3. `/dev/rhel/root` this name can be different see in your system and use that one\n12. `exit` after all done","x":317,"y":-1040,"width":838,"height":680,"color":"1"},
		{"id":"708b3da46ff882a9","type":"text","text":"Step 4","x":317,"y":-1120,"width":250,"height":60,"color":"3"},
		{"id":"23947956f9adea21","type":"text","text":"# Let's corrupt `ext` file system\n\n1. `lvreduce -L 2G /dev/vg_ext/lvm_ext` here we are reducing `ext4 formatted lvm` without `resize2fs` command\n\t1. Always `resize` using `resize2fs` before or after `reducing` or `extending` the file system \n2. Now because we haven't `resize` the file-system so it got corrupted\n3. now if you `umount /mnt/ext4lvm_dir` and then\n4. run `mount /mnt/ext4lvm_dir` it will give error because our filesystem is got corrupted\n\n\n# How to repair\n\n1. Make sure the you want to repaired is unmounted\n2. `fsck -a /dev/vg_ext/lvm_ext` it should `repair` the file system. If it is not then\n3. `resize2fs /dev/vg_ext/lvm_ext 2G`\n4. `fsck -a /dev/vg_ext/lvm_ext` if still it is not worked then run\n5. `mkfs.ext4 /dev/vg_ext/lvm_ext` and then run \n6. `fsck -a /dev/vg_ext/lvm_ext` now it will work","x":1320,"y":-260,"width":1000,"height":580,"color":"1"},
		{"id":"f12e2900fa09890f","type":"text","text":"Step 5","x":2070,"y":-335,"width":250,"height":60,"color":"3"}
	],
	"edges":[]
}