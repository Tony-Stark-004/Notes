{
	"nodes":[
		{"id":"dd39166032318866","type":"text","text":"Disk Management","x":-240,"y":-340,"width":400,"height":60,"color":"3"},
		{"id":"62c90479eb00bc57","type":"text","text":"#lsblk \nUsed to display all block (Storage) device.\n\n1. run `lsblk` \n\n","x":-480,"y":-242,"width":520,"height":142},
		{"id":"3c52afe333fddf78","type":"text","text":"#fdisk\nThis command show details of particular disk\n\n1. `fdisk -l /dev/sda`\n2. `fdisk -l` show all disk details which is attached to system","x":-480,"y":-80,"width":520,"height":200},
		{"id":"30c4c8fa048eead2","type":"text","text":"#dmesg \nused to watch `kernel` ring buffer. meaning when disk is attached to system at the time of booting you can see the details and debug it very accurately in-case disk cause any problem or not attached\n\n1. run `dmesg`\n2. `dmesg | grep sda`\n\n","x":60,"y":-242,"width":520,"height":242},
		{"id":"9bfacc71d666da01","type":"text","text":"#lshw \nList-hardware command gives detailed information about hardware specially `block devices` and `volumes` attached to the system\n\n1. run `lshw` \n\n","x":60,"y":20,"width":520,"height":200},
		{"id":"2b2f4916770ee3d8","type":"text","text":"#lsscsi\nDisplay all attached `SCSI disk` information \n\n1. run `lsscsi`\n2. `cat /proc/scsi/scsi`","x":-480,"y":140,"width":520,"height":200},
		{"id":"26562dc16908dca0","type":"text","text":"#badblocks \nThis command is very powerful and used to permanent delete the data from blocks or volumes so no can recycle again using any tool.\n\n1. `badblock -ws block_device_name` Example\n2. `badblocks -ws /dev/sda`","x":60,"y":240,"width":540,"height":300},
		{"id":"f74eae181579a037","type":"text","text":"#dd\ndisk destroyer is used to create file of specific size or can also be used to make swap file or can also be used to delete each block and each sector of disk.\n\n1. `dd if=/dev/zero/ of=/dev/sda` this command replace reach block and sectors by `zero` of disk","x":-480,"y":360,"width":520,"height":220},
		{"id":"3b3cc50211efa1d1","type":"text","text":"How to disk and do partition","x":-240,"y":620,"width":400,"height":50,"color":"3"},
		{"id":"8195fa4eb8e07043","type":"text","text":"***How to create file or store data in newly created partition***\n\n***NOTE*** : we need to `format` the disk meaning we should define the `file system`  like `FAT32 or NTFS or xfs` to newly partition disk to store data. also we need to mound the directory as well\n\n1. `mkfs.xfs /dev/sda1` here `mkfs meaning make file system`\n2. `lsblk -f` display all `attached device` with `file system`\n3. `blkid /dev/sda1` do same as `step 2`\n4. `mkdir /data_file` creating `directory in root directory`\n5. `mount /dev/sda1 /data_file/` here `mounting /dev/sda1 disk on /data_file directory`\n6. run `df` it display which `disk` is mounted on which `directory`\n7. now `cd /data_file`\n8. now you can make or add anything inside `/data_file` which is ultimately `/dev/sda1 disk space` \n9. so run `touch dummy.txt`\n10. and then `umount /data_file` after unmounting when you run \n11. `cd /data_file` \n12. and run `ll` there is no `dummy.txt` file because file is actually made in `/dev/sda1` not in `/data_file`\n\n\n***NOTE*** : \n\n* `fdisk = MBR disk managed`\n* `gdisk = GPT disk`\n* `parted = both disk.` here `parted is tool used to partition`\n* `partprobe is used to make read kernel about changes it can't used to managed or partition disk` \n\n***How can we know whether our OS is virtual or physical***\n1. `dmidecode -t1`\n","x":-580,"y":1100,"width":620,"height":940,"color":"1"},
		{"id":"282def897f87a9cb","x":-580,"y":1020,"width":250,"height":60,"color":"3","type":"text","text":"Step 3"},
		{"id":"d26645e9327ce1bc","type":"text","text":"***How to do partition of disk***\n1. **NOTE** : `if we use fdisk command for partition then fdisk command only be used for MBR disk and only 4 primary partition can be done. MBR is compatible with BIOS`\n\n**`Primary partition`** --> `primary partition is the partition on which we can store data and can also install operating system`\n\n\n2.  If we have `GPT disk which is not work on BIOS it needed UEFI system can have 128 primary partition.`\n\t1. Here we use `gdisk` instead of `fdisk` utility\n\n3. `partprobe` command can be used for both `MBR disk` or `GPT disk` partition\n\n***\n\n1. `cat /proc/partitions` these give the details of disk that has partition and how many partition of one disk has\n\n***How to do partition of disk***\n\n1. `fdisk block_disk_name` example\n2. `fdisk /dev/sda` and press enter\n3. press `m` and then enter for help\n4. press `n` and then enter for making new partition\n5. press `p` for `primary disk` and press `e` for `extended disk` and then press enter\n6. then enter `partition number` ranging `1 to 4` in case of `MBR disk`\n7. it will ask for `sector` go for default and press enter\n8. then give the partition size of disk  like `+2G` for `2 GB` and so on\n9. then for changing its type press `t` and then enter\n10.  it will ask `hex code` for the type of disk. if you don't know about it then press `L` and enter for displaying all types \n11. so for `Linux LVM` the `hex code is 8e` type it and then press enter\n12. last press `w` to save all changes\n\n***Here***, \nTo letting kernel know about newly partition and change run \n1. `partprobe` command \n2. `partprobe /dev/sda` you can run anyone one of two\n\n\n***How to delete partition***\n1. where we press `n` for creating new partition we would press `d` and then enter\n2. it will ask the which partition number you want to delete then press partition number like `4` and then press enter","x":78,"y":740,"width":720,"height":1220,"color":"1"},
		{"id":"178b6a004515c820","x":188,"y":670,"width":250,"height":60,"color":"3","type":"text","text":"Step 2"},
		{"id":"6073d4897fe31169","type":"text","text":"***How to add disk without rebooting system***\n***NOTE*** : `nvme disk can not add while on-go need rebooting` \n\n1. `ls /sys/class/scsi_host/ | while read host; do echo \"- - -\" > /sys/class/scsi_host/$host/scan ; done`\n2. Above command scan `SCSI disk` and add to the system without the need of rebooting the system.\n3. Now, run `lsblk` it shows the attached new disk","x":-520,"y":740,"width":560,"height":260},
		{"id":"f3fd9ce11a2a6b4b","x":-520,"y":670,"width":250,"height":60,"color":"3","type":"text","text":"Step 1"}
	],
	"edges":[]
}