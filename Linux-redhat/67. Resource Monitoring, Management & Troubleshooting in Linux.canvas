{
	"nodes":[
		{"id":"0c0dfd94b2a2d1cd","type":"text","text":"# Resource Monitoring, Management & Troubleshooting in Linux","x":-440,"y":-360,"width":900,"height":69,"color":"3"},
		{"id":"b367e945202eccf3","type":"text","text":"# Main resources that we manage\n* CPU\n* Network\n* RAM\n* Storage\n\n```\n1. top\nğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ This command is used to manage processes running on machine\n\n2. top p <process-id>\nğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ This command shows details of specific process\n\n3. free\nğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ This command is used to see memory details\n\n4. free -m\nğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ Shows the details of memory in megabyte\n\n5. free -g\nğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ Shows the details of memory in gigabyte\n\n6. free -s 3\nğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ Shows every 3 seconds refresh the memory details\n```","x":-760,"y":-260,"width":820,"height":660,"color":"4"},
		{"id":"127a620b0a8870f3","type":"text","text":"\n```\n1. watch -d -n 4 date\nğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ This command is repeat date command in every 4 seconds\n* -d for delay\n* -n for delay in seconds\n* 4 is the repeat time\n\n```\n\n\n```\n1. iostat\nğŸ‘‰ğŸ‘‰ğŸ‘‰ To use the isostat command we need sysstat package. \niostat basically give the information of input and output devices\n\n2. rpm -qa | grep sysstat \n3. rpm -q sysstat\n\nğŸ‘‰ğŸ‘‰ğŸ‘‰ Both command shows whether sysstat it is installed or not\n\n4. yum install -y sysstat\n5. ls -ld /var/log/sa \nğŸ‘‰ğŸ‘‰ğŸ‘‰ This directory is automatically made when you installed the sysstat package and it contain logs of all resources that is being utilized over the period of time\n\n6. iostat -d 2 8 \nğŸ‘‰ğŸ‘‰ğŸ‘‰ This will repeat the output 8 times in every 2 second\n```","x":80,"y":-260,"width":820,"height":660,"color":"4"},
		{"id":"425cbb269d4b10c0","type":"text","text":"```\n1. mpstat\nğŸ‘‰ğŸ‘‰ğŸ‘‰ This command shows you details of CPU like CPU utilization and CPU core and all\n\n2. mpstat -P ALL\nğŸ‘‰ğŸ‘‰ğŸ‘‰ This command shows you details of every CPU core present in your machine\n```\n\n```\n1. sar 2 3\nğŸ‘‰ğŸ‘‰ğŸ‘‰ This command shows you system resources utilization change 3 times in every 2 seconds\n\nNOTE: \n1. nmon\nğŸ‘‰ğŸ‘‰ğŸ‘‰ This command is used in debian machine to see the resource utilization\n\n2. htop\nğŸ‘‰ğŸ‘‰ğŸ‘‰ This command is same as top command but shows details in much cooler way though you need package to use it so make sure to install first\n```\n\n```\n1. lsof\nğŸ‘‰ğŸ‘‰ğŸ‘‰ Give you the details of open files in machine\n\n2. lsof -p <process-id>\n3. lsof -p 1\nğŸ‘‰ğŸ‘‰ğŸ‘‰ This command shows you how many files are open due to process-Id 1\nBy the wat systemd service has process-id 1\n```","x":-760,"y":420,"width":820,"height":720,"color":"4"},
		{"id":"58d778b83ce8f8af","type":"text","text":"```\n1. ps -C bash\nğŸ‘‰ğŸ‘‰ğŸ‘‰ Give process-id of bash\n```\n\n```\n1. lsof -i :22\nğŸ‘‰ğŸ‘‰ğŸ‘‰ This command shows you details of service that uses port number 22\nby the way port 22 is ssh port so it shows ssh service detail\n\n2. lsof /directory_name/\nğŸ‘‰ğŸ‘‰ğŸ‘‰ Will show the open files exist in /directory_name directory\n\n3. lsof -u <username>\nğŸ‘‰ğŸ‘‰ğŸ‘‰ Will show files open by <username>\n\n4. lsof -u ^aditya\nğŸ‘‰ğŸ‘‰ğŸ‘‰ Will show open files which is not open by aditya user. Here ^ symbol meaning exclude\n```\n\n```\n1. fuser -m -u /directory-name/\nğŸ‘‰ğŸ‘‰ğŸ‘‰ Will show you the name of the file creator.\n\n2. fuser -m -k -u /directory-name/\nğŸ‘‰ğŸ‘‰ğŸ‘‰ This command kill all the files which belongs to /directory-name folder\n-k meaning kill\n\n3. fuser -v /directory-name/\nğŸ‘‰ğŸ‘‰ğŸ‘‰ This command will show all the processes and services associated with directory-name\n-v meaning verbose\n```","x":80,"y":420,"width":860,"height":740,"color":"4"},
		{"id":"87738bf13de9cbfd","x":960,"y":-260,"width":940,"height":1050,"color":"3","type":"text","text":"# chroot\n* chroot creates a shell with an alternative root directory it effectively hides anything outside of this directory\n* used to change the root directory for the current running process and its child processes\n* basically it creates the environment through which we can manage and access root-filesystem files\n\n# Step to use it\n1. restart you machine with IOS image \n2. press f2 for BIOS UI\n3. go to `Boot` tab and change the priority of `CD-ROM Drive` to top\n4. press f10 to save the changes. Machine will automatically start and boot-up with IOS image\n5. choose `Troubleshooting` option\n6. then choose `Rescue a Centos Stream system`. machine will take few minutes then\n7. choose `Skip to shell` option pressing option `3` on machine or see at what place these option is\n8. `Troubleshooting ----> Rescue a Centos Stream system ----> Skip to shell`\n9. Now we get `sh shell`\n10. run `df -hT`\n\t* You will see the mounted filesystem details\n11. you will see the `/ directory` which root filesystem and it is not our original root filesystem it is IOS image root files\n12. to see our `/ root filesystem` run `lsblk`\n13. you won't see `LVM` on our `/ root filesystem` because it is `in-active` so let's activate it\n14. run `lvscan`\n\t* It will show the `inactive` root and swap LVMs\n15. run `vgchange -ay cs`\n\t* Activating the volume group of LVM and you got the volumes group name using `lvs` command\n16. let's mount the original root filesystem `mount /dev/cs/root /mount_dir`\n17. `cd /mount_dir`\n18. run `ls` it will show all directory of original root file system\n19. now to access it and manage it use `chroot` without it you won't able to\n20. `chroot /mount_dir`\n\t* because you mounted on `/mount_dir` that's why entire content is lies in it\n21. now you got the `base shell` you whatever you want in root filesystem\n\nNOTE: How beautiful Linux is without login you can access and manage the `/` root filesystem using `chroot` command"},
		{"id":"9f3b85460de1dfaf","x":1140,"y":-360,"width":251,"height":72,"color":"3","type":"text","text":"# IMPORTANT"}
	],
	"edges":[]
}