{
	"nodes":[
		{"id":"cbfe0844af782dc3","x":-500,"y":-400,"width":1080,"height":80,"color":"3","type":"text","text":"# Install New Kernel In RHEL 8 | Set/Change Default Kernel & GRUB Timeout"},
		{"id":"e7a1b7b49392a266","x":-1040,"y":-280,"width":1205,"height":1060,"color":"5","type":"text","text":"#### To check kernel version \n1. `uname -a` or\n2. `uname -r`\n\n# How to install kernel new version\nNote --> To install new kernel we need external package and we need to configure it in our machine to download that package from online repository\n\n1. `dnf repolist all`\n\t1. It will show all configured repo in the machine\n2. `cd /etc/yum.repos.d`\n\t1. `/etc/yum.repos.d` files have all configured repository file\n3. `yum install https://www.elrepo.org/elrepo-release-8.e18.elrepo.noarch.rpm -y`\n\t1. `elrepo` is the external package name used to install new kernel version\n\t2. Here we are configuring `online elrepo repository` into machine\n\t3. you can it in `cd /etc/yum.repos.d`\n\t4. `ls` you will see the new `elrepo` inside `/etc/yum.repos.d`\n4. in step no. 3 we are installing `elrepo` package directly from the online repository. we can also download it in local machine then can install it see step 5\n5. `wget https://www.elrepo.org/elrepo-release-8.e18.elrepo.noarch.rpm`\n\t1. it will download the `elrepo` package locally in machine as `elrepo-release-8.e18.elrepo.noarch.rpm`\n\t2. now let's install it\n\t3. `rpm -ivh elrepo-release-8.e18.elrepo.noarch.rpm`\n6. `dnf repolist all`\n\t1. it will show the `rlrepo` repository now\n\t2. it `elrepo` is disable then you can enable it \n\t3. `yum --disablerepo=\"*\" --enablerepo=\"elrepo-kernel\" list available`\n\t\t1. here `--disablerepo=\"*\"` meaning we are disabling all repository\n\t\t2. `--enablerepo=\"elrepo-kernel\"` meaning we are enabling repo whose name is `elrepo-kernel`\n\t\t3. `list available` here represents all available repo\n7. Now install the version of kernel package\n\t1. `yum --enable=elrepo-kernel install kernel-ml -y`\n\t\t1. `kernel-ml` is package name where `elrepo-kernel` is `repositry name where package kernel-ml` is present\n8. After installing the package if we go inside `/boot` \n\t1. `cd /boot`\n\t2. `ls` \n\t3. we will see new `vmlinuz kernel version file` inside `/boot directory`"},
		{"id":"ba0da1a674f203a7","type":"text","text":"# How to set default kernel \nNote --> to ser default kernel we need to make change in `grub.cfg` file and `grub.cfg` file itself depends on `grubenv` file and these two files present inside `grub2 directory` and `grub2 directory` present inside `/boot`\n1. `cd /boot`\n2. `ls` you will see `grub2 directory`\n3. `cd grub2`\n4. `ls` you will see `grub.cfg` and `grubenv` file\n\n# Important\n1. `cat /etc/default/grub`\n\t1. `/etc/default/grub` is the `file` where all grub default settings are written like `grub timeout`, `default kernel version` and all\n\t2. Also this setting comes from `grub.cfg` and `grubenv` files\n2. `grub2-set-default 0`\n\t1. This will set latest entry inside `grubenv` file as `saved_entry=0`\n\t2. `0` represents latest entry\n\t3. if number is `1` meaning previous entry\n3. now if you go inside `cat /boot/grub2/grubenv`\n\t1. it will show `saved_entry=0`\n\n# How to set grub timeout setting\n\n1. `vim /etc/default/grub`\n2. change `GRUB_TIMEOUT` variable value from `5` to `25`\n3. save it and exit it now `grub timeout is 25 seconds`\n\nNow run,\n\n1. `grub2-mkconfig -o /boot/grub2/grub.cfg`\n\t1. This command regenerate `grub.cfg` file with latest `kernel version` that we set inside `grubenv` file on running `grub2-set-default 0` and we change `grub timeout value from 5 to 25 seconds` inside `/etc/default/grub`\n2. Now reboot the system to see the changes\n\t1. `init 6`","x":200,"y":-280,"width":1205,"height":1060,"color":"4"}
	],
	"edges":[]
}