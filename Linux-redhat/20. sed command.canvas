{
	"nodes":[
		{"id":"06f0aad72b6533b5","type":"text","text":"`sed command` #sed\n1. stream editor command is used to update or edit output of previous commands in runtime\n2. Also use to update file like `vi editor do`\n\nExample :\n1. `echo Sunday | sed 's/Sun/Mon/'` output would be `Monday`\n1. also we can write as `echo Sunday | sed 's:Sun:Mon:'` output would be `Monday`\n\nlet's break it\n1. `echo Sunday` here `Sunday` is input for `sed 's/Sun/Mon/'`\n2. `s/Sun/Mon/` here `s` stands for string\n3. `/Sun/Mon` means replace `Sun` keyword via `Mon`","x":-1240,"y":-260,"width":880,"height":420},
		{"id":"94dd1b993fb2a151","type":"text","text":"How to update file content via `sed command`\n\nExample :\n1. `echo Sunday > text.txt` output is it create the `text.txt` file with content `Sunday` in it\n2. `sed -i 's/Sun/Mon/' text.txt` and press enter it shows nothing on display but when you run \n3. `cat text.txt` output is `Monday`\n\n****NOTE*** : \n1. when you run `sed -i 's/Sun/Mon/' text.txt` here `-i` means do change in file permanently\n\n","x":-320,"y":-260,"width":880,"height":420},
		{"id":"a1d0588b960e71fd","type":"text","text":"sed command --> stream editor","x":-610,"y":-360,"width":660,"height":60,"color":"3"},
		{"id":"cb151246261f8210","type":"text","text":"Use of special Symbols\n\n`&& ampercent` :\n1. `echo Sunday | sed 's/Sun/&&/'` output is `SunSunday` \n2. double `&&` means double the before keyword. here in `/Sun/&&/` before keyword is `/Sun` so it double the `Sun` as `SunSun`\nAnother example\n1. `echo Sunday | sed 's/day/&&/'` output is `Sundayday` \n\n\n`() parenthesis` : \n1. `echo Sunday | sed 's_\\(Sun\\)_\\1ny_'` output is `Sunnyday` here `1` means `Sun`\n2. `echo Sunday | sed 's_\\(Sun\\)_\\1ny\\1_'` output is `SunnySunday` if we add space between `\\1ny\\1_`\n2. `echo Sunday | sed 's_\\(Sun\\)_\\1ny \\1_'` output is `Sunny Sunday`\n\n\n`. dot`\n1. `echo 2014-04-01 | sed 's/....-..-../YYYY-MM-DD/'` output is `YYYY-MM-DD`\n2. `echo 2014-04-01 | sed 's/\\(....\\)-\\(..\\)-\\(..\\)/\\1:2:3/'` output is `2014:04:01`\n2. `echo 2014-04-01 | sed 's/\\(....\\)-\\(..\\)-\\(..\\)/\\1+2+3/'` output is `2014+04+01`","x":-1240,"y":200,"width":880,"height":580},
		{"id":"0968f90a9d26c883","type":"text","text":"Suppose i want to print content that have at least two `o` so \n\n1. `grep -E 'ooo?' list.txt` output is `lool and loool`\n\nlet's break it \n1. `ooo?` here `?` means only one char but it can be anything either `numeric or alphabet` \n\n****NOTE*** : `ooo` here we are using 3 `o` but we are searching at least 2 `o` so why we are using 3 `o` \nreason is last `o` is pass as optional.\n\n\n\nNow using regex with `sed command`\n1.  `cat list.txt | sed 's/ooo\\?/A/'` output is `lAl, lAl`\n2. here `o` is replaced by `A`\n\n\n\nNow filtering using `grep`\n1. `grep -E 'o{3}' list.txt` this means if `o` is at least 3 times then display it so output is `loool` \n1. `grep -E 'o{2}' list.txt` this means if `o` is at least 2 times then display it so output is `lool and loool` \n\nif we want between `2 and 3` then\n1. `grep -E 'o{2,3}' list.txt` this means more than 2 and less than 3 so output is `lool and loool` \n2. `grep -E 'o{2,3}' list.txt | sed 's/o\\{2,3\\}/A/'` output is `lAl, lAl`\n\n\n\n\n","x":-320,"y":200,"width":880,"height":740},
		{"id":"032d8fe862071db4","type":"text","text":"`list.txt contains`\n\nll\nlol\nlool\nloool","x":640,"y":269,"width":352,"height":221,"color":"4"},
		{"id":"1fe732bee7d2e866","x":-1240,"y":800,"width":880,"height":180,"type":"text","text":"`How to use sed command with history ! sign`\n\nExample:\n1. suppose if we run `!5` it gives us output `ls -l file1`\n2. using sed command `!5:s/1/2` now output would be `ls -l file2`"}
	],
	"edges":[
		{"id":"0cb8db8aef9a3e54","fromNode":"032d8fe862071db4","fromSide":"left","toNode":"0968f90a9d26c883","toSide":"right"}
	]
}