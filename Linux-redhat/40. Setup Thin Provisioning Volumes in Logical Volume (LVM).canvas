{
	"nodes":[
		{"id":"1838f665b9dfdfe3","x":-300,"y":-355,"width":660,"height":60,"color":"3","type":"text","text":"Setup Thin Provisioning Volumes in Logical Volume (LVM)"},
		{"id":"8ff61634b0b9001b","x":-480,"y":-900,"width":741,"height":520,"color":"1","type":"text","text":"* suppose we have `volume group` of `15GB` and we created `3 LVM` and allocated `5GB each` now what happen if `4th client` come and ask for `space of 5GB` because our `volume group` is already occupied so we need to `extend the volume group`. this is normal scenario\n***\n* but what if we provide on-demand space to client even if all space of `volume group` is allocated  this is called `thin provisioning`\n\n* we can provide on-demand space even if all the space is allocated to client because it is not mandatory that allocated client would have used all allocated space to understand it let's say\n\t* client 1 `allocated space is 5GB` used space is `1GB`\n\t* client 2 `allocated space is 5GB` used space is `3GB`\n\t* client 3 `allocated space is 5GB` used space is `2GB`\n\t* so we have `1+3+2 = 6GB` occupied out of `15GB` so we can allocate the space to new client but it need to monitor carefully and when need arises we need to extend the `volume group` because there is chance when all client may want to use their space so monitoring is very important\n\n"},
		{"id":"9d50377ad9c125bc","x":-500,"y":-260,"width":1020,"height":1360,"color":"1","type":"text","text":"***Let's create a pool***\n* `What is pool` : in thin provisioning the pool is nothing a `LVM (logical volume)` itself \n\n1. suppose we created a partition with name `/dev/sdb1` having size `20GB`\n2. `pvcreate /dev/sdb1`\n3. `vgcreate -s 32M vg_thin /dev/sdb1` by default physical extent value is `4MB` if we want to set custom extent value then we can use `-s` option with `custome value` i have used `32MB`\n4. `vgdisplay vg_thin` it shows\n\t1. Volume group size = `20GB` = `20*1024`\n\t2. Physical extent size = `32MB`\n\t3. total Physical extent present = `20*1024/32` = `640`\n5. `lvcreate -L 15G --thinpool thin_pool_lvm vg_thin` creating the pool\n6. `lvdisplay /vg_thin/thin_pool_lvm` it shows all details about `Logical volumes (LVM)`\n7. `lvcreate -v 5G --thin -n thin_volume_client1 /vg_thin/thin_pool_lvm` created a `LVM` for client1 using the `pool`\n\t1. `mkfs.ext4 /dev/vg_thin/thin_volume_client1`\n\t2. `mount /dev/vg_thin/thin_volume_client1 /mnt/client1`\n\t3. `df -hT` to check whether mounted to not\n\t4. `cd /mnt/client1`\n\t5. `touch file1{1..100}.txt` create `100 files`\n\n8. `lvcreate -v 5G --thin -n thin_volume_client2 /vg_thin/thin_pool_lvm` created a `LVM` for client2 using the `pool`\n\t1. `mkfs.ext4 /dev/vg_thin/thin_volume_client2`\n\t2. `mount /dev/vg_thin/thin_volume_client2 /mnt/client2`\n\t3. `df -hT` to check whether mounted to not\n\t4. `cd /mnt/client2`\n\t5. `touch file2{1..100}.txt` create `100 files`\n\t\n9. `lvcreate -v 5G --thin -n thin_volume_client3 /vg_thin/thin_pool_lvm` created a `LVM` for client3 using the `pool`\n\t1. `mkfs.ext4 /dev/vg_thin/thin_volume_client3`\n\t2. `mount /dev/vg_thin/thin_volume_client3 /mnt/client3`\n\t3. `df -hT` to check whether mounted to not\n\t4. `cd /mnt/client3`\n\t5. `touch file3{1..100}.txt` create `100 files`\n\n10. `lsblk -f` to check whether file system is created or not\n11. now suppose we created `8GB` of data on `3 LVMs` including\n12. `because our pool size is 15GB we have 15-8 = 7GB`. NOTE: \n\t1. our `volume group` size is `20GB` but `client LVM` is made by `pool LVM` which is `15GB`. \n\t2. `volume group` is used to make `pool LVM`\n13. `lvcreate -v 5G --thin -n thin_volume_client4 /vg_thin/thin_pool_lvm` created a `LVM` for client4 using the `pool LVM`\n14. `step 13` give warning because `pool LVM Size is 15GB` and is already allocated to `client1`, `client2`, `client3` so it gives warning that `pool volume is exceed` but it create `client4 LVM` and hence we have to monitor and make sure that `client1 + client2 + client3 + client4` never utilizes the `100%` meaning `15GB` otherwise it will corrupt the disk\n\n\n***How to extend `Pool LVM`***\n\n1. `lvextend -L +15G /dev/vg_thin/thin_pool_lvm` but we don't have `15GB` space in `volume group (vg_thin)`\n2. so we need to extend `volume group` first\n3. `vgextend vg_thin /dev/sdb2` believing we have another partition `/dev/sdb2` of size `30GB`\n4. now run, `lvextend -L +15G /dev/vg_thin/thin_pool_lvm`\n5. `vgs` it will show the increased size of `vg_thin`\n6. `lvs` it shows `all LVM information including thin_pool_lvm`"}
	],
	"edges":[]
}