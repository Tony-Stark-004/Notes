{
	"nodes":[
		{"id":"4aa3ddebc0f70156","x":-760,"y":-220,"width":752,"height":780,"color":"1","type":"text","text":"***How to Merge or Split `Volume groups`***\n\n* creating `LVM1`\n\t1. suppose we have partition `/dev/sda1` of size `5GB`\n\t2. `pvcreate /dev/sda1`\n\t3. `vgcreate vg1 /dev/sda1`\n\t4. `lvcreate -l 1000 -n lvm1 vg1`\n\t5. `here we used normal numeric value 1000 not like 1000MB` this is called `extent`. `1 extent = 4MB` so we had created `4GB space LVM whose name is lvm1`\n\t6. `vgdispaly` shows the details of `volume group` and here you will find by default value of `1 extent which is PE size = 4.00MB`\n\t7. `mkfs.ext4 /dev/vg1/lvm1`\n\t8. `mount /dev/vg1/lvm1 /test1`\n\t9. `cd /test1`\n\t10. create data inside `/test1`\n\n\n***\n\n* creating `LVM2`\n\t1. suppose we have another partition `/dev/sda2` of size `5GB`\n\t2. `pvcreate /dev/sda2`\n\t3. `vgcreate vg2 /dev/sda2`\n\t4. `lvcreate -l 1000 -n lvm2 vg2`\n\t5. `mkfs.xfs /dev/vg2/lvm2`\n\t6. `mount /dev/vg2/lvm2 /test2`\n\t7.  `cd /test2`\n\t10. create data inside `/test2`"},
		{"id":"79c9f7d86675bb0a","x":-760,"y":-310,"width":250,"height":60,"color":"3","type":"text","text":"Step 1"},
		{"id":"db1efa73d544bfdd","x":20,"y":-310,"width":250,"height":60,"color":"3","type":"text","text":"Step 2"},
		{"id":"18d610f675aa26b9","type":"text","text":"***Suppose we want to merge `vg2` with `vg1`***\n\n***NOTE*** : `because we want to merge vg2 so we need unmount lvm2 and de-activate vg2 before merging`\n\n1. `umount /test2`\n2. `vgchange -an vg2`\n3. `lvscan` show `lvm2 in-active` because we `de-activate the vg2`\n4. `vgmerge vg1 vg2` because we want `vg2` merge with `vg1` so `vg2` is comes after `vg1`\n5. run `vgs` it shows only one `group volume` which is `vg1` but size of `vg1` is not `5GB` it is `10GB` because of merge\n6. now run `lvs` it shows both `lvm1 and lvm2` but both `lvm` has same group volume which is `vg1` earlier i mean before merging `lvm1 has vg1` and `lvm2 has vg2` \n7. run `lvscan` you will see `lvm2` is in `in-active state` so we need to `activate` it\n8. run `lvchange -ay /dev/vg1/lvm2`\n9. to check data is in-tact after merging let's mount both `lvm`\n10. `mount /dev/vg1/lvm1 /test1`\n11. `mount /dev/vg1/lvm2 /test2`\n12. `cd /test1`\n13. `ll` you will see all data is in-tact after the `merge`\n14. same for `/test2`\n\n\n***\n","x":20,"y":-220,"width":752,"height":620,"color":"4"},
		{"id":"14df93d4a9d5ad99","x":-300,"y":-380,"width":460,"height":60,"color":"3","type":"text","text":"Merge-Split volumes"},
		{"id":"cd7a9683ef8943d1","x":20,"y":420,"width":250,"height":60,"color":"3","type":"text","text":"Step 3"},
		{"id":"eea1f7eca4357512","x":20,"y":500,"width":752,"height":740,"color":"5","type":"text","text":"***How to split `volume group`***\n\n***NOTE*** : `spliting is done with help of physical volume meaning either you can split considering the /dev/sda1 physical volume or considering /dev/sda2`\n\n1. `de-activate group volume` so run `vgchange -an vg1`\n2. `lvscan` check whether it `de-activate or not`\n3. `vgsplit vg1 split_vg /dev/sda2`\n\t1. here `vg1` represents we want `vg1` as it is because it is the only volume that exist\n\t2. `split_vg` represent `new splitting volume name` so we keep name as `split_vg`\n\t3. `/dev/sda2` as i suggest above splitting is done considering the `physical volume` so here `split_vg` is made using `/dev/sda2` because for making `volume group` we need `physical volume`\n4. `vgs` it shows two volume groups now\n\t1. `vg1`\n\t2. `split_vg`\n5. `lvscan` it shows both `vg1 and vg2` is `in-active` so to activate them\n6. `lvchange -ay /dev/vg1/lvm1`\n7. `lvchange -ay /dev/split_vg/lvm2` you can activate like that or run \n8. `vgchange -ay vg1 split_vg` or like this\n9. `lvscan` now it shows `active` for both\n10. now `mount /dev/vg1/lvm1 /test1`\n11. `mount /dev/split_vg/lvm2 /test2`\n12. `cd /test1`\n13. `ll` you will see all data is in-tact after the `split`\n14. same for `/test2`"},
		{"id":"e785a6028b621925","x":-760,"y":580,"width":500,"height":260,"color":"4","type":"text","text":"#vgcfgrestore \nused to `restore` deleted data in `LVM`\n\n1. `vgcfgrestore --list volume_group_name`\n2. `vgcfgrestore --list vg1` this command will show you all details of `vg1` like `metadata` and `restoring point` "}
	],
	"edges":[]
}