{
	"nodes":[
		{"id":"82c3379d239b4802","type":"text","text":"# Concept of RAID & RAID Levels | Create & Manage RAID-0","x":-400,"y":-360,"width":860,"height":80,"color":"3"},
		{"id":"770e9ec493474bd8","type":"text","text":"`Raiding` : `Redundant Array of Independent Disks` is a Linux feature that combines multiple disks into a single device to increase performance, capacity, and data redundancy\n\n1. `RAID 0` --> `Striping` meaning more than `2` disk is used in sharing and if `1` of two disk `fails` then all data will corrupt permanently\n2. `RAID 1` --> `Mirroring` data is copied to another disk in case of disk failure\n3. `RAID 5` --> `Striping with Parity`\n4. `RAID 6` --> `Striping with double parity`\n5. `RAID 10` --> `Combining mirroring and striping`\n\n\n# RAID 0\n1. `fdisk /dev/sda`\n2. press `n` for new\n3. press `p` for primary disk\n4. press `1` for partition number\n5. press enter `for entire disk space` or `+2G` for `2GB space allocation`\n6. press `t` for type\n7. press `fd` for `raid type` and `8e` for `lvm type` \n8. press `w` to save changes\n9. run `partprobe` to inform system about `partition`\n10. run `lsblk` it will show the `partition /dev/dsa1`\n11. run `lsblk -f` it will not show any `uuid` because we haven't made filesystem on partition yet so,\n12. `mkswap /dev/sda1` this command format our `partition as swap file-Type`\n13. now run `lsblk -f` it will show `uuid` now\n\n***\ndo exactly same for `/dev/sdb` disk and make `partition /dev/sdb1`\n\nNow,\nMaking `RAID`\n1. `mdadm -C /dev/md0 -l 0 -n 2 /dev/sda1 /dev/sdb1`\n\t1. `-C` option meaning is to create the `RAID`\n\t2. `/dev/md0` is the `RAID name` make sure to make like that `md0, md1, md2`\n\t3. `-l 0` level of `RAID` meaning which type of `RAID` are you creating so we are creating `RAID 0`\n\t4. `-n 2` number of disk used to make `RAID` so in our case it is `2`\n2. `lsblk` it will show `sda1 and sdb1 partition` with `RAID 0 as md0 name`\n3. `cat /proc/mdstat` it will show `md0 active RAID 0`\n4. `mdadm -D /dev/md0` it will show complete details of `md0 raid`\n5. `mdadm --detail /dev/md0` do exact same as `step 4` do\n\n\n***NOTE*** : This `Raid md0` can be formatted also we can create LVM on it and used as normal disk\n# See Step 2 --->","x":-760,"y":-260,"width":825,"height":1240,"color":"1"},
		{"id":"96fe5986918dd620","type":"text","text":"Step 1","x":-760,"y":-340,"width":250,"height":60,"color":"3"},
		{"id":"77f61ec7c004c7c2","type":"text","text":"Step 2","x":80,"y":-260,"width":250,"height":60,"color":"3"},
		{"id":"6216df6ce1feefe6","type":"text","text":" 1. `mkfs.ext4 /dev/md0`\n 2. `mkdir /radi0`\n 3. `mount /dev/md0 /radi0`\n 4. `df -hT` it will show the mounting information\n 5. `cd /raid0`\n 6. `touch file_raid{1..100}.txt`\n\n***How to remove RAID***\n1. `umount /radi0`\n2. `df -hT`\n3. `mdadm --stop /dev/md0` or `mdadm -S /dev/md0`\n4. `cat /proc/mdstat` it will not show any `Raid` as we `stopped`\n\n* Creating `RAID` using `disk directly` without partition\n\t1.  `mdadm -C /dev/md1 -l 0 -n 3 /dev/sdc /dev/sdd /dev/sde`\n\t2. `cat /proc/mdstat` you will see the `/dev/md1` raid\n\n\n***How to create `LVM` using `RAID`***\n1. `pvcreate /dev/md1`\n2. `vgcreate vg_raid /dev/md1`\n3. `lvcreate -L 2G -n lvm_raid vg_raid`\n4. `lvs` to see the details\n5. `mkfs.ext4 /dev/vg_raid/lvm_raid`\n6. `mount /dev/vg_raid/lvm_raid /raid1_dir`\n7. `df -hT`\n\n***NOTE*** : You can't fault the `RAID 0` forcefully because system know if any one of disk fail the entire data is lost permanently\n1. `mdadm /dev/md1 -f /dev/sdc` we are trying to fault `/dev/sdc` but it won't happen it will give error\n\t1. `-f` meaning faulty","x":80,"y":-180,"width":825,"height":860,"color":"1"}
	],
	"edges":[]
}