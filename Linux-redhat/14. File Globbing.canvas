{
	"nodes":[
		{"id":"b57c0f8d4f580266","type":"text","text":"Case 1 \n1. `ls File*` \n2. output is `File1, File22abc, Fileabc` but not `filea, file1`\n\nReason : `*` means anything character after `File keyword` whether it is string or numeric ","x":-540,"y":-200,"width":560,"height":200,"color":"1"},
		{"id":"0908a80f7540d09c","type":"text","text":"Case 2 \n1. `ls *ile*` \n2. output is `File1, File22abc, Fileabc ,filea, file1`\n\nReason : Anything include `ile` character would be the output","x":80,"y":-200,"width":560,"height":200,"color":"1"},
		{"id":"b2124becaf315f99","type":"text","text":"Case 2 part 2\n1. `ls *ile` \n2. output is `abcile, file, zile`\n\nReason : `files_name` include `ile` character at the end","x":80,"y":20,"width":560,"height":200,"color":"5"},
		{"id":"b6df89d483a7ff3a","type":"text","text":"Case 1 \n1. `ls file*` \n2. output is `file1, file22abc, fileabc` but not `Filea, File1`\n\nReason : `*` means anything character after `file keyword` whether it is string or numeric","x":-540,"y":20,"width":560,"height":200,"color":"5"},
		{"id":"1906f0deb8b62636","type":"text","text":"Case 3 \n1. `ls f*5` \n2. output is `file5, fabzd5, f1115`\n\nReason : Anything starts from `f` and end to `5` would be the output","x":680,"y":-200,"width":560,"height":200,"color":"1"},
		{"id":"9f2cb0e99586e019","type":"text","text":"Case 3 part 2\n1. `ls f*88` \n2. output is `file88, fabzd88, fi245ez88`\n\nReason : Anything starts from `f` and end to `88` would be the output","x":680,"y":20,"width":560,"height":200,"color":"5"},
		{"id":"63952ad59cb5f15a","type":"text","text":"File Globbing --> means finding files dynamically ","x":-60,"y":-300,"width":700,"height":50,"color":"3"},
		{"id":"e1d69b8f6e417c6e","type":"text","text":"Case 4 \n1. `ls File?` \n2. output is `File1, File2, FileA` but not `Fileabcs, file123`\n\nReason : `?` used when there is only `one` character whether it is numeric or string but `only one` character at place of `?`","x":-560,"y":280,"width":560,"height":200,"color":"1"},
		{"id":"b1f3dac116d0b518","type":"text","text":"Case 4 part 2\n1. `ls File??` \n2. output is `File11, File2A, FileA6` but not `File555, fileAzc`\n\nReason : `??` used when there is only `two` character whether it is numeric or string but `only two` character at place of `??`","x":-560,"y":500,"width":560,"height":200,"color":"4"},
		{"id":"2cedcd4474f6ccd6","type":"text","text":"Case 5 \n1. `ls File[5A]` \n2. output would be either `FileA or File5`\n\nReason : `[5A]` includes either one of two char so output is `FileA` or `File5` ","x":80,"y":280,"width":560,"height":200,"color":"1"},
		{"id":"018477b13c7668fa","type":"text","text":"Case 5 part 2 \n1. `ls File[5A][6B]` \n2. output can be among one of them `File56, File5B, FileA6 or FileAB`\n\nReason : `[5A][6B]` includes `56, 5B, A6, AB` one character at one time from both the cases\n","x":80,"y":500,"width":560,"height":240,"color":"4"},
		{"id":"fe48082b29ed2827","type":"text","text":"Case 5 part 3 \n1. `ls File[5A][!B]` \n2. output would be `File52, FileAk etc`\n\nReason : `[5A][!B]` means the end  character of `file_name` should not be `B`\n","x":80,"y":760,"width":560,"height":240,"color":"6"},
		{"id":"642bf05bd9ae9d5c","type":"text","text":"Case 6 part 2 \n1. `ls File[!5]*` \n2. output can be `FileAb, FileZ8 etc`\n\nReason : `[!5]*` means second last character must not be `5` and last character is anything either `numeric or string`\n","x":680,"y":280,"width":560,"height":200,"color":"1"},
		{"id":"432e6307e07c4809","type":"text","text":"Case 6 part 2 \n1. `ls File[a-z]*` \n2. output can be `Fileab, Filez8, FileA3 etc`\n3. after running `LANG=C` which add case sensitivity\n4. `ls File[a-z]*`\n5. output can be `Fileab, Filez8 etc` but not `FileA3, FileBZ`\n\nReason : `[a-z]*` means second last character can be any alphabet `a to z` and last character is anything either `numeric or string`\n","x":680,"y":500,"width":580,"height":300,"color":"4"},
		{"id":"9436e1e2a07443fc","type":"text","text":"Case 7 \n1. run `mkdir folderOne`\n2. `echo *`  output is `*`\n3. run `touch fileOne.txt fileTwo.txt` \n4. `echo *` output is `fileOne.txt, fileTwo.txt`\n\n ****NOTE*** :\n 1. `echo *` give `*` as output is directory is empty and give `all files` if files existed in that directory\n\n\n****NOTE*** : \n1. `echo \\*` prevent `file globbling`  and output is `*` whether directory is empty or contain file in it ","x":-560,"y":1040,"width":560,"height":420,"color":"1"}
	],
	"edges":[]
}