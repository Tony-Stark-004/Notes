{
	"nodes":[
		{"id":"a820e7d05dd6b592","type":"text","text":"`Container` --> `combination of namespaces & cgroups`\nNOTE --> `namespaces & cgroups are provided by linux kernel` \n\n* `namespaces` --> `provide isolation workplace for container`\n\n\n### LXC (Linux container)\nis a lightweight virtualization environment provided by the Linux kernel to provide system-level virtualization without running a hypervisor LXC combines three main concepts for resources isolation as follow : \n* Cgroups\n* Namespaces\n* Chroot\n\n\n# Cgroups (Control groups)\nLinux cgroups is a feature provided by kernel to restrict access to system resources (Like RAM or ROM or CPU) for a process or set of processes\n\n","x":-563,"y":-353,"width":703,"height":553},
		{"id":"93abca1080435a34","type":"text","text":"# Docker command\n\n1. `docker --version` \n\t1. if you will get version it means you have installed docker successfully\n2. `docker`\n\t1. if you get output then it means `docker daemon is running in host system`\n3. `docker images`\n\t1. will show docker images\n\t2. once we build the images then it becomes container\n4. `docker pull redis`\n\t1. it will pull the redis image from `docker registry`\n5. `docker run `\n\t1. it will talk to `docker daemon` then looking for `docker image` that we already have and build it `docker container`\n6. `docker build dockerfile_path`\n\t1. sometime we will create our own `docker file` so `docker build` convert our `docker file` into `docker image` then we need to `run` it so it becomes `docker container`\n7. `docker search redis` \n\t1. it will show all available redis images","x":160,"y":-353,"width":703,"height":593},
		{"id":"6f8b6009f19e622e","type":"text","text":"Docker","x":-80,"y":-440,"width":420,"height":50,"color":"3"},
		{"id":"89c4f6f1fda87f72","type":"text","text":"# Docker Container\nIt is an instance of a docker image. A container represents the execution of a single application, process, or service. It consists of the contents of a Docker image, an execution environment, and a standard set of instruction.\n\n\n# Repository\nA collection of related Docker images, Labeled with a tag that indicates the image version\nLike `Alphine`\n\n\n# Registry\nA service that provides access to repositories. The default registry for most public images is `Docker Hub`","x":-563,"y":220,"width":703,"height":480},
		{"id":"32bbf5bc1c4cea04","type":"text","text":"1. `docker ps` \n\t1. will show how many container i have\n2. `docker ps -a`\n\t1. will show all active container\n3. `docker rm 53f9e378a0bf`\n\t1. `53f9e378a0bf` is container Id \n\t2. command is used to delete the docker container\n4. `docker run -it ubuntu /bin/bash`\n\t1. `-it` meaning interactive mode \n\t2. `ubuntu` is `docker image` name\n\t3. `/bin/bash` is shell name\n\t4. run `winpty docker run -it ubuntu //bin/bash` for window\n5. `docker inspect 78caf60e4ad8`\n\t1. will show container details whose Id is `docker inspect 78caf60e4ad8`\n6. `docker container prune`\n\t1. will delete all dead-container at once","x":160,"y":260,"width":703,"height":480}
	],
	"edges":[]
}